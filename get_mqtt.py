import paho.mqtt.client as mqtt
import time

mqtt_server = "1df19fa858774630a1197a48081cc0c1.s1.eu.hivemq.cloud"
mqtt_port = 8883
mqtt_username = "chechanh2003"
mqtt_password = "0576289825Asd"
topic = "Livingroom/device_1"

# Callback khi k·∫øt n·ªëi th√†nh c√¥ng
def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("‚úÖ Connected to MQTT Broker!")
        client.subscribe(topic)
    else:
        print(f"‚ö†Ô∏è Failed to connect, return code {rc}")

# Callback khi nh·∫≠n tin nh·∫Øn
def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("‚úÖ Connected to MQTT Broker!")
        client.subscribe(topic)
    else:
        print(f"‚ö†Ô∏è Failed to connect, return code {rc}")

# Callback khi nh·∫≠n tin nh·∫Øn
def on_message(client, userdata, msg):
    
    data = msg.payload.decode()
    # Chu·ªói ƒë·∫ßu v√†o
    input_string = data
    print(data)

    # T√°ch chu·ªói b·∫±ng d·∫•u '&'
    parts = input_string.split('&')

    # Kh·ªüi t·∫°o c√°c bi·∫øn
    SpO2 = None
    HR = None
    Temp = None
    BP1 = None
    BP2 = None

    for part in parts:
        if '=' in part:
            key, value = part.split('=')
            if key == "SpO2":
                SpO2 = int(value)
            elif key == "HR":
                HR = int(value)
            elif key == "Temp":
                Temp = float(value)
            elif key == "BP":
                BP1, BP2 = map(int, value.split('/'))
                
    print(SpO2, HR, Temp, BP1, BP2)


# Kh·ªüi t·∫°o MQTT Client v·ªõi TLS/SSL
client = mqtt.Client()
client.username_pw_set(mqtt_username, mqtt_password)  # ƒêƒÉng nh·∫≠p
client.tls_set()  # K√≠ch ho·∫°t TLS

# G√°n callback
#quan l√Ω k·∫øt n·ªëi v√† nh·∫≠n tin nh·∫Øn
client.on_connect = on_connect
client.on_message = on_message

print("üîÑ Connecting to broker...")
client.connect(mqtt_server, mqtt_port, 60)

client.loop_start()

time.sleep(2)
client.publish(topic, "Hello from Python MQTT over TLS!")

try:
    while True:
        time.sleep(1)  
except KeyboardInterrupt:
    print("‚ùå Disconnecting...")
    client.loop_stop()
    client.disconnect()
